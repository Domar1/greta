% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distributions.R
\name{greta-distributions}
\alias{greta-distributions}
\alias{free}
\alias{uniform}
\alias{normal}
\alias{lognormal}
\alias{bernoulli}
\alias{binomial}
\alias{negative_binomial}
\alias{poisson}
\alias{gamma}
\alias{exponential}
\alias{student}
\alias{beta}
\alias{multivariate_normal}
\alias{wishart}
\title{greta probability distributions}
\usage{
free(lower = -Inf, upper = Inf, dim = 1)

uniform(min, max, dim = NULL)

normal(mean, sd, dim = NULL)

lognormal(meanlog, sdlog, dim = NULL)

bernoulli(prob, dim = NULL)

binomial(size, prob, dim = NULL)

negative_binomial(size, prob, dim = NULL)

poisson(lambda, dim = NULL)

gamma(shape, rate, dim = NULL)

exponential(rate, dim = NULL)

student(df, location, scale, dim = NULL)

beta(shape1, shape2, dim = NULL)

multivariate_normal(mean, Sigma, dim = 1)

wishart(df, Sigma)
}
\arguments{
\item{lower, upper}{scalar values giving optional limits to free
parameters. These must be specified as numerics, they cannot be greta
arrays (though see details for a workaround). They can be set to \code{-Inf} (\code{lower}) or \code{Inf}
(\code{upper}), though \code{lower} must always be less than \code{upper}.}

\item{dim}{the dimensions of the variable, either a scalar or a vector of
positive integers. See details.}

\item{min, max}{scalar values giving optional limits to \code{uniform}
variables. Like \code{lower} and \code{upper}, these must be specified as
numerics, they cannot be greta arrays (though see details for a
workaround). Unlike \code{lower} and \code{upper}, they must be finite.
\code{min} must always be less than \code{max}.}

\item{mean, meanlog, location}{unconstrained parameters}

\item{sd, sdlog, size, lambda, shape, rate, df, scale, shape1, shape2}{positive
parameters}

\item{prob}{probability parameter (\code{0 < prob < 1})}

\item{Sigma}{positive definite variance-covariance matrix parameter}
}
\description{
These functions can be used to define random variables in a
  greta model. They return a greta array object that can be combined with
  other greta arrays to construct a model. All of these functions construct
  random variables with prior distributions, except for \code{free()}, which
  creates 'free' parameters, so can be used for frequentist analyses.
}
\details{
The discrete probability distributions (\code{bernoulli}, \code{binomial},
  \code{negative_binomial}, \code{poisson}) can be used as likelihoods, but
  not as unknown variables.

  For \code{free()}, \code{dim} gives the dimension of the greta array to
  create as a free parameter. All elements of that array will have the same
  constraints (\code{lower} and \code{upper}). For univariate distributions
  \code{dim} also gives the dimensions of the greta array to create. Each
  element of the greta array will be (independently) distributed according to
  the distribution. \code{dim} can also be left at its default of
  \code{NULL}, in which case the dimension will be detected from the
  dimensions of the parameters (provided they are compatible with one
  another).

  For \code{multivariate_normal()}, \code{dim} must be a scalar giving the
  number of rows in the resulting greta array, each row being (independently)
  distributed according to the multivariate normal distribution. The number
  of columns will always be the dimension of the distribution, determined
  from the parameters specified. \code{wishart()} always returns a single
  square, 2D greta array, with dimension determined from the parameter
  \code{Sigma}.

  The parameters of both \code{free} and \code{uniform} must be fixed, not
  greta variables. This ensures these values can always be transformed to a
  continuous scale to run the samplers efficiently. However, a hierarchical
  \code{uniform} or \code{free} parameter can always be created by defining a
  \code{free} or \code{uniform} variable constrained between 0 and 1, and then
  transforming it to the required scale. I.e. \code{min + u * (max - min)},
  where u is e.g. \code{uniform(0, 1)}. See below for an example.

  Wherever possible, the parameterisation of these distributions matches the
  those in the \code{stats} package. E.g. for the parameterisation of
  \code{negative_binomial()}, see \code{\link{dnbinom}}. \code{student()} is an
  exception, since the \href{https://en.wikipedia.org/wiki/Student\%27s_t-distribution#In_terms_of_scaling_parameter_.CF.83.2C_or_.CF.832}{location-scale representation} we use is more useful,
  and widely used, for statistical modelling than the noncentral version
  implemented in \code{stats}
}
\examples{
# an unconstrained and prior-free parameter (e.g. for a frequentist model)
alpha = free()

# positive prior-free parameter (could also do: sigma = exp(free()) )
sigma = free(lower = 0)

# a prior-free parameter constrained to be less that -1
neg_alpha = free(upper = -1)

# a prior-free parameter constrained to be between 0 and 1
psi = free(lower = 0, upper = 1)

# a uniform parameter constrained to be between 0 and 1
phi = uniform(min = 0, max = 1)

# create a hierarchical uniform, constrained between alpha and alpha + sigma,
eta = alpha + uniform(0, 1) * sigma

# an unconstrained parameter with standard normal prior
mu = normal(0, 1)

# a hierarchical distribution
theta = normal(mu, lognormal(0, 1))

# a vector of 3 variables drawn from the same hierarchical distribution
thetas = normal(mu, sigma, dim = 3)

# a matrix of 12 variables drawn from the same hierarchical distribution
thetas = normal(mu, sigma, dim = c(3, 4))

# a multivariate normal variable, with correlation between two elements
Sig <- diag(4)
Sig[3, 4] <- Sig[4, 3] <- 0.6
theta = multivariate_normal(rep(mu, 4), Sig)

# 10 independent replicates of that
theta = multivariate_normal(rep(mu, 4), Sig, dim = 10)

# a Wishart variable with the same covariance parameter
theta = wishart(df = 5, Sigma = Sig)
}
