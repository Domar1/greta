% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distributions.R
\name{greta-distributions}
\alias{greta-distributions}
\alias{free}
\alias{normal}
\alias{lognormal}
\alias{bernoulli}
\alias{binomial}
\alias{negative_binomial}
\alias{poisson}
\alias{gamma}
\alias{exponential}
\alias{student}
\alias{beta}
\alias{multivariate_normal}
\alias{wishart}
\title{greta probability distributions}
\usage{
free(lower = -Inf, upper = Inf, dim = 1)

normal(mean, sd, dim = 1)

lognormal(meanlog, sdlog, dim = 1)

bernoulli(prob, dim = 1)

binomial(size, prob, dim = 1)

negative_binomial(size, prob, dim = 1)

poisson(lambda, dim = 1)

gamma(shape, rate, dim = 1)

exponential(rate, dim = 1)

student(df, location, scale, dim = 1)

beta(shape1, shape2, dim = 1)

multivariate_normal(mean, Sigma, dim = 1)

wishart(df, Sigma)
}
\arguments{
\item{lower, upper}{a length-one vectors giving optional limits to free
parameters. These must be specified as numerics, and cannot be greta
arrays. They can be set to \code{-Inf} (\code{lower}) or \code{Inf}
(\code{upper}), though \code{lower} must always be less than \code{upper}.}

\item{dim}{the dimensions of the variable, either a scalar or a vector of
positive integers. See details.}

\item{mean, meanlog, location}{unconstrained parameters}

\item{sd, sdlog, size, lambda, shape, rate, df, scale, shape1, shape2}{positive
parameters}

\item{prob}{probability parameter (\code{0 < prob < 1})}

\item{Sigma}{positive definite variance-covariance matrix parameter}
}
\description{
These functions can be used to define random variables in a
  greta model. They return a greta array object that can be combined with
  other greta arrays to construct a model. All of these functions construct
  random variables with prior distributions, except for \code{free()}, which
  creates 'free' parameters, so can be used for frequentist analyses.
}
\details{
The discrete probability distributions (\code{bernoulli}, \code{binomial},
  \code{negative_binomial}, \code{poisson}) can be used as likelihoods, but
  not as unknown variables.

  For univariate distributions \code{dim} gives the dimensions of the greta
  array to create, each element of which will be (independently) distributed
  according to the distribution. For \code{multivariate_normal()}, \code{dim}
  must be a scalar giving the number of rows in the resulting greta array,
  each row being (independently) distributed according to the multivariate
  normal distribution. The number of columns will always be the dimension of
  the distribution, determined from the parameters specified.
  \code{wishart()} always returns a single square, 2D greta array, with
  dimension determined from the parameter \code{Sigma}.

  Wherever possible, the parameterisation of these distributions matches the
  those in the \code{stats} package. E.g. for the parameterisation of
  \code{negative_binomial()}, see \code{\link{dnbinom}}. \code{student()} is an
  exception, since the \href{https://en.wikipedia.org/wiki/Student\%27s_t-distribution#In_terms_of_scaling_parameter_.CF.83.2C_or_.CF.832}{location-scale representation} we use is more useful,
  and widely used, for statistical modelling than the noncentral version
  implemented in \code{stats}
}
\examples{
# an unconstrained and prior-free parameter (e.g. for a frequentist model)
alpha = free()

# positive prior-free parameter (could also do: sigma = exp(free()) )
sigma = free(lower = 0)

# a prior-free parameter constrained to be less that -1
neg_alpha = free(upper = -1)

# a prior-free parameter constrained to be between 0 and 1
psi = free(lower = 0, upper = 1)

# an unconstrained parameter with standard normal prior
mu = normal(0, 1)

# a hierarchical distribution
theta = normal(mu, lognormal(0, 1))

# a vector of 3 variables drawn from the same hierarchical distribution
thetas = normal(mu, sigma, dim = 3)

# a matrix of 12 variables drawn from the same hierarchical distribution
thetas = normal(mu, sigma, dim = c(3, 4))

# a multivariate normal variable, with correlation between two elements
Sig <- diag(4)
Sig[3, 4] <- Sig[4, 3] <- 0.6
theta = multivariate_normal(rep(mu, 4), Sig, dim = 4)

# a Wishart variable with the same covariance parameter
theta = wishart(df = 5, Sigma = Sig, dim = 4)
}
