% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/samplers.R
\name{greta-inference}
\alias{greta-inference}
\alias{define_model}
\alias{mcmc}
\title{Statistical Inference on Greta Models}
\usage{
define_model(..., precision = c("single", "double"), n_cores = NULL,
  compile = TRUE)

mcmc(model, method = c("hmc"), n_samples = 1000, thin = 1, warmup = 100,
  verbose = TRUE, control = list(), initial_values = NULL)
}
\arguments{
\item{\dots}{\code{greta_array} objects to be tracked by the model (i.e.
those for which samples will be retained during mcmc). If not provided, all
of the non-data \code{greta_array} objects defined in the calling
environment will be tracked.}

\item{precision}{the floating point precision to use when evaluating this
model. Switching from \code{'single'} (the default) to \code{'double'}
should reduce the risk of numerical instability during sampling, but will
also increase the computation time, particularly for large models.}

\item{n_cores}{the number of cpu cores to use when evaluating this model.
Defaults to and cannot exceed the number detected by
\code{parallel::detectCores}.}

\item{compile}{whether to apply
\href{https://www.tensorflow.org/performance/xla/}{XLA JIT compilation} to
the tensorflow graph representing the model. This may slow down model
definition, and speed up model evaluation.}

\item{model}{greta_model object}

\item{method}{the method used to sample values. Currently only \code{hmc} is
implemented}

\item{n_samples}{the number of samples to draw (after any warm-up, but before
thinning)}

\item{thin}{the thinning rate; every \code{thin} samples is retained, the
rest are discarded}

\item{warmup}{the number of samples to spend warming up the sampler. During
this phase the sampler moves toward the highest density area and may tune
sampler hyperparameters.}

\item{verbose}{whether to print progress information to the console}

\item{control}{an optional named list of hyperparameters and options to
control behaviour of the sampler. See Details.}

\item{initial_values}{an optional named vector of initial values for the free
parameters in the model}
}
\value{
\code{define_model} - a \code{greta_model} object. See
  \code{\link{greta-model}} for details.

\code{mcmc} - an \code{mcmc.list} object that can be analysed using
  functions from the coda package. This will on contain mcmc samples of the
  parameters of interest, as defined in \code{model}.
}
\description{
Define a \code{greta_model} object and carry out statistical
  inference on parameters of interest by MCMC
}
\details{
Currently, the only implemented MCMC procedure is static Hamiltonian
  Monte Carlo (\code{method = 'hmc'}). During the warmup iterations, the
  leapfrog stepsize hyperparameter \code{epsilon} is tuned to maximise the
  sampler efficiency. The \code{control} argument can be used to specify the
  initial value for epsilon, along with two other hyprparameters: \code{Lmin}
  and \code{Lmax}; positive integers (with \code{Lmax > Lmin}) giving the
  upper and lower limits to the number of leapfrog steps per iteration (from
  which the number is selected uniformly at random).

  If you're getting a lot of rejected proposals, you might want to reduce
  \code{epsilon}, or if the sampler is moving too slowly you might want to
  increase \code{epsilon}. You can also

  The default control options for HMC are:
  \code{control = list(Lmin = 10, Lmax = 20, epsilon = 0.005)}
}
\examples{

\dontrun{

# define a simple model
mu = free()
sigma = lognormal(1, 0.1)
x = rnorm(10)
distribution(x) = normal(mu, sigma)

m <- define_model(mu, sigma)

}
\dontrun{
# carry out mcmc on the model
draws <- mcmc(m,
              n_samples = 100,
              warmup = 10)
}
}
